import admin from "firebase-admin";

// Ki·ªÉm tra n·∫øu Firebase ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o
if (!admin.apps.length) {
    admin.initializeApp({
        credential: admin.credential.cert({
            projectId: process.env.FIREBASE_PROJECT_ID,
            clientEmail: process.env.FIREBASE_CLIENT_EMAIL,
            privateKey: process.env.FIREBASE_PRIVATE_KEY.replace(/\\n/g, '\n'),
        }),
        databaseURL: process.env.FIREBASE_DATABASE_URL, // URL Database t·ª´ Firebase
    });
}

const db = admin.database();

export default async function handler(req, res) {
    const { studentId } = req.query;

    if (!studentId) {
        return res.status(400).json({ error: "Thi·∫øu studentId" });
    }

    try {
        console.log(`üîÑ ƒêang t·∫£i ti·∫øn tr√¨nh t·ª´ Firebase cho h·ªçc sinh: ${studentId}`);

        // ƒê·ªçc d·ªØ li·ªáu t·ª´ Firebase Database
        const snapshot = await db.ref(`progress/${studentId}`).once("value");
        const studentProgress = snapshot.val();

        if (!studentProgress) {
            throw new Error(`Kh√¥ng t√¨m th·∫•y ti·∫øn tr√¨nh c·ªßa h·ªçc sinh ${studentId}`);
        }

        console.log(`‚úÖ Ti·∫øn tr√¨nh c·ªßa ${studentId}:`, studentProgress);
        res.status(200).json(studentProgress);
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y ti·∫øn tr√¨nh:", error);
        res.status(500).json({ error: error.message });
    }
}
